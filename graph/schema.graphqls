type Wallet {
  address: ID!
  balance: BigInt!
  createdAt: Time!
  updatedAt: Time!
}

type Query {
  # Fetch wallet by its address
  wallet(address: ID!): Wallet

  # List all wallets in the system
  wallets: [Wallet!]!
}

input TransferInput {
  to_address: ID!
  amount: BigInt!
}

type Mutation {
  # Transfer multiple amounts from one wallet to multiple recipients, atomically
  transfer(from_address: ID!, transfers: [TransferInput!]!): BigInt!
}

scalar BigInt
scalar Time
