package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.74

import (
	"context"
	"fmt"

	"github.com/zanpatryk/tokentransferapi/graph/generated"
	"github.com/zanpatryk/tokentransferapi/store"
)

// Transfer is the resolver for the transfer field.
func (r *mutationResolver) Transfer(ctx context.Context, fromAddress string, transfer generated.TransferInput) (int, error) {
	op := store.TransferOp{
		To:     transfer.ToAddress,
		Amount: transfer.Amount,
	}

	newBalance, err := r.Store.Transfer(ctx, fromAddress, op)
	if err != nil {
		return newBalance, fmt.Errorf("Transfer failed: %w", err)
	}
	return newBalance, err
}

// Wallet is the resolver for the wallet field.
func (r *queryResolver) Wallet(ctx context.Context, address string) (*generated.Wallet, error) {
	return r.Store.GetByAddress(ctx, address)
}

// Wallets is the resolver for the wallets field.
func (r *queryResolver) Wallets(ctx context.Context) ([]*generated.Wallet, error) {
	return r.Store.ListAll(ctx)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
